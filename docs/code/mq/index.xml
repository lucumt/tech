<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>消息中间件 on 个人笔记</title>
    <link>https://tech.lucumt.info/docs/code/mq/</link>
    <description>Recent content in 消息中间件 on 个人笔记</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <atom:link href="https://tech.lucumt.info/docs/code/mq/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Kafka的5种使用场景</title>
      <link>https://tech.lucumt.info/docs/code/mq/top-5-kafka-use-cases/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tech.lucumt.info/docs/code/mq/top-5-kafka-use-cases/</guid>
      <description></description>
    </item>
    <item>
      <title>kakfa丢失消息的场景</title>
      <link>https://tech.lucumt.info/docs/code/mq/can-kafka-lose-messages/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tech.lucumt.info/docs/code/mq/can-kafka-lose-messages/</guid>
      <description>Error handling is one of the most important aspects of building reliable systems.&#xA;Today, we will discuss an important topic: Can Kafka lose messages?&#xA;A common belief among many developers is that Kafka, by its very design, guarantees no message loss. However, understanding the nuances of Kafka&amp;rsquo;s architecture and configuration is essential to truly grasp how and when it might lose messages, and more importantly, how to prevent such scenarios.</description>
    </item>
    <item>
      <title>Reddit核心架构</title>
      <link>https://tech.lucumt.info/docs/code/mq/the-core-reddit-architecture/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tech.lucumt.info/docs/code/mq/the-core-reddit-architecture/</guid>
      <description>A quick look at Reddit’s Core Architecture that helps it serve over 1 billion users every month.&#xA;This information is based on research from many Reddit engineering blogs. But since architecture is ever-evolving, things might have changed in some aspects.&#xA;The main points of Reddit’s architecture are as follows:&#xA;Reddit uses a Content Delivery Network (CDN) from Fastly as a front for the application&#xA;Reddit started using jQuery in early 2009.</description>
    </item>
    <item>
      <title>Kafka核心概念</title>
      <link>https://tech.lucumt.info/docs/code/mq/kafka-101/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tech.lucumt.info/docs/code/mq/kafka-101/</guid>
      <description>The Ultimate Kafka 101 You Cannot Miss&#xA;Kafka is super-popular but can be overwhelming in the beginning.&#xA;Here are 8 simple steps that can help you understand the fundamentals of Kafka.&#xA;1 - What is Kafka? Kafka is a distributed event store and a streaming platform. It began as an internal project at LinkedIn and now powers some of the largest data pipelines in the world in orgs like Netflix, Uber, etc.</description>
    </item>
  </channel>
</rss>
